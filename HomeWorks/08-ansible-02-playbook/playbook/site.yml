---
- name: Install Clickhouse
  hosts: clickhouse
  handlers:
    - name: Start clickhouse service
      become: true
      ansible.builtin.service:
        name: clickhouse-server
        state: started
  tasks:
    - name: Install initscripts
      ansible.builtin.yum:
        name: initscripts
        state: present
    - block:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/rpm/stable/{{ item }}-{{ clickhouse_version }}.noarch.rpm"
            dest: "./{{ item }}-{{ clickhouse_version }}.rpm"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib
          ansible.builtin.get_url:
            #url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.x86_64.rpm"
            #url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.aarch64.rpm"
            url: "https://packages.clickhouse.com/rpm/stable/clickhouse-common-static-{{ clickhouse_version }}.{{ ch_arc_var }}.rpm"
            dest: "./clickhouse-common-static-{{ clickhouse_version }}.rpm"
    - name: Install clickhouse packages
      become: true
      become_method: su
      ansible.builtin.yum:
        name:
          - clickhouse-common-static-{{ clickhouse_version }}.rpm
          - clickhouse-client-{{ clickhouse_version }}.rpm
          - clickhouse-server-{{ clickhouse_version }}.rpm
      #notify: Start clickhouse service - не работает handler, пришлось вбыдлить блок ниже  --v
    - name: Ensure clickhouse-server is running
      ansible.builtin.command: service clickhouse-server start
      become: true
      become_method: su
    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc !=82
      changed_when: create_db.rc == 0

- name: Install vekctor
  hosts: vector
  tasks:
    - name: Download Vector from remote URL
      get_url:
        url: "https://packages.timber.io/vector/{{ vector_version }}/vector-{{ vector_version }}-{{ vec_arc_var }}-unknown-linux-musl.tar.gz"
        dest: "/tmp/vector-{{ vector_version }}-{{ vec_arc_var }}-unknown-linux-musl.tar.gz"
        mode: 0755
        timeout: 60
        force: true
        validate_certs: false
      register: get_vector
      until: get_vector is succeeded
      tags: vector
    - name: Create directrory for vector
      file:
        state: directory
        path: "{{ vector_home }}"
      tags: vector
    - name: Extract Vector in the installation directory
      #become: true
      unarchive:
        copy: false
        src: "/tmp/vector-{{ vector_version }}-{{ vec_arc_var }}-unknown-linux-musl.tar.gz"
        dest: "{{ vector_home }}"
        extra_opts: [--strip-components=2]
#        creates: "{{ vector_home }}/bin/vector"
      tags:
#        - skip_ansible_lint
        - vector
#    - name: Set environment Kibana
#      #become: true
#      template:
#        src: templates/kib.sh.j2
#        dest: /etc/profile.d/kib.sh
#      tags: vector