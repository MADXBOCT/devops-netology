---
- name: Check if kubeadm has already been executed
  stat:
    path: "/etc/kubernetes/pki/ca.key"
  register: kubeadm_ca

- name: Get public IP of master
  command: curl http://2ip.io
  register: publicIP

- name: Init
  shell: kubeadm init --apiserver-cert-extra-sans={{ publicIP.stdout }} --pod-network-cidr 10.244.0.0/16
  when: not kubeadm_ca.stat.exists

#- name: Pause for 1 minute
#  ansible.builtin.pause:
#    minutes: 1

- name: Ensure .kube directory exists.
  file:
    path: ~/.kube
    state: directory
    mode: 0755

- name: Symlink the kubectl admin.conf to ~/.kube/conf.
  file:
    src: /etc/kubernetes/admin.conf
    dest: ~/.kube/config
    state: link
    mode: 0644

#- name: Wait for all control-plane pods become created
#  shell: "kubectl get po --namespace=kube-system --selector tier=control-plane --output=jsonpath='{.items[*].metadata.name}'"
#  register: control_plane_pods_created
#  until: item in control_plane_pods_created.stdout
#  retries: 10
#  delay: 30
#  with_items:
#    - etcd
#    - kube-apiserver
#    - kube-controller-manager
#    - kube-scheduler
#    - kube-proxy

- name: Wait for control-plane pods become ready
  shell: "kubectl wait --namespace=kube-system --for=condition=Ready pods --selector tier=control-plane --timeout=600s"
  register: control_plane_pods_ready

- name: Installing network plugin
  shell: "kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml"

- name: Wait for network pods become ready
  shell: "kubectl wait --namespace=kube-flannel --for=condition=Ready pods --all --timeout=1200s"
  register: flannel_pods_ready

- name: Wait for all k8s nodes to be ready
  shell: "kubectl wait --for=condition=Ready nodes --all --timeout=600s"
  register: nodes_ready

- name: Getting join command from the master node
  shell: kubeadm token create --print-join-command
  register: join_command

- name: Setting join command for k8s_worker role
  add_host:
    name: k8s_master
    k8s_join_command: "{{ join_command.stdout }}"

- name: Copy file with owner and permissions
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /tmp/admin.conf
    owner: root
    group: root
    mode: '0644'
    remote_src: yes

- name: Replace local ip in kubectl admin.conf to public ip
  replace:
    path: /tmp/admin.conf
    regexp: '(\b[0-9]{1,3}\.){3}[0-9]{1,3}\b'
    replace: "{{ publicIP.stdout }}"

- name: Copy admin.conf to localhost ~/.kube/conf
  ansible.builtin.fetch:
    src: /tmp/admin.conf
    dest: ~/.kube/config
    flat: yes